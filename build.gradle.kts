/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id("java")
    id("maven-publish")
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    compile("io.vertx:vertx-core:3.6.2")
    compile("io.vertx:vertx-service-proxy:3.6.2")
    compile("io.vertx:vertx-rx-java2:3.6.2")

    compileOnly("io.vertx:vertx-codegen:3.6.2")
    annotationProcessor("io.vertx:vertx-rx-java2:3.6.2")
    annotationProcessor("io.vertx:vertx-rx-java2-gen:3.6.2")
    annotationProcessor("io.vertx:vertx-service-proxy:3.6.2")
    annotationProcessor("io.vertx:vertx-codegen:3.6.2:processor")

    // Use JUnit test framework
    testCompile("junit:junit:4.12")
}

tasks.withType<JavaCompile>().configureEach {
    with(options) {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
        encoding = "UTF-8"
    }
}

sourceSets {
    main {
        java {
            setSrcDirs(listOf("/src/main/java", "src/main/generated"))
        }
    }
}

tasks {
    getByName<JavaCompile>("compileJava") {
        options.annotationProcessorGeneratedSourcesDirectory = File("$projectDir/src/main/generated")
    }

    getByName<Delete>("clean") {
        delete.add("src/main/generated")
    }
}
